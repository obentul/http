#1 ================================================================================================================
因特网不仅仅是http协议，以包括smtp，rtsp，ftp等等，这些协议统称为URL方案(scheme)。

我们在浏览器中输入的地址都是以这些方案开头。

每个协议（方案）都有自己的DNS（域名服务器），从而让Agent组装的请求，能够通过网关服务找到对应ip地址，从而定位到服务器
所在位置，进而访问资源


#2 ================================================================================================================
URL的由来

URL是URI的子集，在http协议中不区分URL和URI，可以理解为是一个东西

在出现浏览器之前，不同的协议都需要使用专门的Agent来进行包装代理，这也是Agent代理一词的由来。
比如想收发邮件就必须使用专门处理smtp协议的应用程序来进行，比如gmail等等。
想取远处的文件，就必须使用ftp应用软件，比如xftp，filezilla。

浏览器的出现把这些协议都集合到了一起，然后通过统一的URL来进行管理（通过URL方案来区别）。而URL标准的制定，让浏览器
集成这些特有协议成为了可能。


#3 ================================================================================================================
URL的格式

<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<frag>

静态资源访问，一般情况下，只要使用<scheme> <ip> <port> <path> 就够用了

<user> <password> 在ftp和ssh等协议（shceme）场景下可能会用到

#4 ================================================================================================================

#方案（shceme）---
方案用来告诉应用程序（这里指浏览器）应该是用什么样的协议栈来对待当前URL。

#路径（path）---
路径可以使多段的，每一段都可以有自己的参数（params）

#片段（frag）---
片段是针对客户端而言，即针对Agent的，在数据交互式，还是交互整个资源，只是Agent只显示片段，相当于切片动作在客户端
进行，服务器最多会给资源各个端打上标记，最终切片的还是Agent

#5 ================================================================================================================
方案简介

http      -----      长文本传输协议方案，不需要用户名和密码，默认端口为80
https     -----      加密的http，默认端口为443，相当于使用了隧道的http协议，即把内容通过SSL加密，然后包装成http传输
mailto    -----      邮件协议
ftp       -----      文件传输，ftp比web和URL还要早
rtsp，rtspu   ----   实施流传输协议，用来解析音/视频媒体资源，rtspu中的u代表使用udp作为控制层
file      -----      本地文件系统
news      -----      访问文章和新闻的协议
telnet    -----      交互式业务


